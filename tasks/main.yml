---
- name: "{{pgdeploy_name+' : '}}create remote project directory if not exists"
  file:
    dest: "{{ pgdeploy_dest_proj_dir }}"
    mode: 0750
    state: directory

- name: "{{pgdeploy_name+' : '}}compose a deploy script"
  template:
    src: deploy.sh
    dest: "{{ pgdeploy_dest_proj_dir }}/.deploy.sh"
    mode: 0755

- name: "{{pgdeploy_name+' : '}}create vars folder"
  file:
    dest: "{{ pgdeploy_dest_proj_dir }}/{{ pgdeploy_vars_dir }}"
    state: directory

- name: "{{pgdeploy_name+' : '}}create var files"
  copy:
    content: "{{ item.value }}"
    dest: "{{ pgdeploy_dest_proj_dir }}/{{ pgdeploy_vars_dir }}/{{item.key}}"
  loop: "{{ query('dict', pgdeploy_vars) }}"
  no_log: true

- name: "{{pgdeploy_name+' : '}}synchronize source directory"
  synchronize:
    src: "{{ pgdeploy_src }}/"
    dest: "{{ pgdeploy_dest_proj_dir }}"
    delete: yes
    use_ssh_args: yes
    copy_links: yes
    owner: no
    perms: no
    rsync_opts:
      - "--exclude=.deploy.sh"
      - "--exclude={{pgdeploy_vars_dir}}"

- name: "{{pgdeploy_name+' : '}}deploy"
  shell: "{{ pgdeploy_dest_proj_dir }}/.deploy.sh"
  args:
    chdir: "{{ pgdeploy_dest_proj_dir }}"
  register: __pgdeploy_deploy
  changed_when: not __pgdeploy_deploy.stdout_lines or __pgdeploy_deploy.stdout_lines[-1] != 'unchanged'
